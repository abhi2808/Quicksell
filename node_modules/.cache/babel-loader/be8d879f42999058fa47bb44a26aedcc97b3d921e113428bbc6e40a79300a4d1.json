{"ast":null,"code":"var _jsxFileName = \"/home/nitin/Desktop/quicksell/src/components/KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTickets, createTicket } from '../api/api';\nimport TicketCard from './TicketCard';\nimport Header from './Header'; // Import Header component\nimport ThreeDotMenuIcon from '../assets/3-dot-menu.svg'; // Import the three-dot icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortBy, setSortBy] = useState('priority');\n\n  // Fetch tickets from API\n  useEffect(() => {\n    fetchTickets();\n  }, []);\n  const fetchTickets = async () => {\n    try {\n      const response = await getTickets();\n      setTickets(response.data);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n\n  // Handle grouping changes\n  const handleGroupByChange = value => {\n    setGroupBy(value);\n  };\n\n  // Handle sorting changes\n  const handleSortByChange = value => {\n    setSortBy(value);\n  };\n\n  // Group tickets based on the selected criteria\n  const groupTickets = () => {\n    const grouped = {};\n    tickets.forEach(ticket => {\n      const groupKey = groupBy === 'status' ? ticket.status : groupBy === 'user' ? ticket.assignee : 'priority_' + ticket.priority;\n      if (!grouped[groupKey]) grouped[groupKey] = [];\n      grouped[groupKey].push(ticket);\n    });\n    return grouped;\n  };\n\n  // Sort tickets within each group\n  const sortTickets = tickets => {\n    return [...tickets].sort((a, b) => {\n      if (sortBy === 'priority') return b.priority - a.priority;\n      if (sortBy === 'title') return a.title.localeCompare(b.title);\n      return 0;\n    });\n  };\n  const groupedTickets = groupTickets();\n  const columns = Object.keys(groupedTickets); // Generate columns based on grouped tickets\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onGroupByChange: handleGroupByChange,\n      onSortByChange: handleSortByChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-columns\",\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: column.replace('_', ' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ThreeDotMenuIcon,\n            alt: \"Options\",\n            className: \"add-ticket-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), sortTickets(groupedTickets[column]).map(ticket => /*#__PURE__*/_jsxDEV(TicketCard, {\n          ticket: ticket\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))]\n      }, column, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"fQH6hYCFy0KYuFy9ZDOqgw1hbe0=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","getTickets","createTicket","TicketCard","Header","ThreeDotMenuIcon","jsxDEV","_jsxDEV","KanbanBoard","_s","tickets","setTickets","groupBy","setGroupBy","sortBy","setSortBy","fetchTickets","response","data","error","console","handleGroupByChange","value","handleSortByChange","groupTickets","grouped","forEach","ticket","groupKey","status","assignee","priority","push","sortTickets","sort","a","b","title","localeCompare","groupedTickets","columns","Object","keys","className","children","onGroupByChange","onSortByChange","fileName","_jsxFileName","lineNumber","columnNumber","map","column","style","padding","replace","src","alt","id","_c","$RefreshReg$"],"sources":["/home/nitin/Desktop/quicksell/src/components/KanbanBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getTickets, createTicket } from '../api/api';\nimport TicketCard from './TicketCard';\nimport Header from './Header'; // Import Header component\nimport ThreeDotMenuIcon from '../assets/3-dot-menu.svg'; // Import the three-dot icon\n\nconst KanbanBoard = () => {\n  const [tickets, setTickets] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortBy, setSortBy] = useState('priority');\n\n  // Fetch tickets from API\n  useEffect(() => {\n    fetchTickets();\n  }, []);\n\n  const fetchTickets = async () => {\n    try {\n      const response = await getTickets();\n      setTickets(response.data);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n\n  // Handle grouping changes\n  const handleGroupByChange = (value) => {\n    setGroupBy(value);\n  };\n\n  // Handle sorting changes\n  const handleSortByChange = (value) => {\n    setSortBy(value);\n  };\n\n  // Group tickets based on the selected criteria\n  const groupTickets = () => {\n    const grouped = {};\n    tickets.forEach((ticket) => {\n      const groupKey = groupBy === 'status'\n        ? ticket.status\n        : groupBy === 'user'\n        ? ticket.assignee\n        : 'priority_' + ticket.priority;\n\n      if (!grouped[groupKey]) grouped[groupKey] = [];\n      grouped[groupKey].push(ticket);\n    });\n    return grouped;\n  };\n\n  // Sort tickets within each group\n  const sortTickets = (tickets) => {\n    return [...tickets].sort((a, b) => {\n      if (sortBy === 'priority') return b.priority - a.priority;\n      if (sortBy === 'title') return a.title.localeCompare(b.title);\n      return 0;\n    });\n  };\n\n  const groupedTickets = groupTickets();\n  const columns = Object.keys(groupedTickets); // Generate columns based on grouped tickets\n\n  return (\n    <div className=\"kanban-board\">\n      <Header onGroupByChange={handleGroupByChange} onSortByChange={handleSortByChange} />\n      <div className=\"board-columns\">\n        {columns.map((column) => (\n          <div key={column} className=\"column\" style={{ padding: '10px' }}>\n            <div className=\"column-header\">\n              <h2>{column.replace('_', ' ')}</h2>\n              <img src={ThreeDotMenuIcon} alt=\"Options\" className=\"add-ticket-icon\" />\n            </div>\n            {sortTickets(groupedTickets[column]).map((ticket) => (\n              <TicketCard key={ticket.id} ticket={ticket} />\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}